"use strict";

exports.__esModule = true;
exports.default = void 0;

var _arrayReduceRight = _interopRequireDefault(require("./_arrayReduceRight.js"));

var _baseEachRight = _interopRequireDefault(require("./_baseEachRight.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseReduce = _interopRequireDefault(require("./_baseReduce.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.reduce` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduce
 * @example
 *
 * var array = [[0, 1], [2, 3], [4, 5]];
 *
 * _.reduceRight(array, function(flattened, other) {
 *   return flattened.concat(other);
 * }, []);
 * // => [4, 5, 2, 3, 0, 1]
 */
function reduceRight(collection, iteratee, accumulator) {
  var func = (0, _isArray.default)(collection) ? _arrayReduceRight.default : _baseReduce.default,
      initAccum = arguments.length < 3;
  return func(collection, (0, _baseIteratee.default)(iteratee, 4), accumulator, initAccum, _baseEachRight.default);
}

var _default = reduceRight;
exports.default = _default;