"use strict";

exports.__esModule = true;
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _map = _interopRequireDefault(require("./map.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.flatMap` except that it recursively flattens the
 * mapped results up to `depth` times.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {number} [depth=1] The maximum recursion depth.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [[[n, n]]];
 * }
 *
 * _.flatMapDepth([1, 2], duplicate, 2);
 * // => [[1, 1], [2, 2]]
 */
function flatMapDepth(collection, iteratee, depth) {
  depth = depth === undefined ? 1 : (0, _toInteger.default)(depth);
  return (0, _baseFlatten.default)((0, _map.default)(collection, iteratee), depth);
}

var _default = flatMapDepth;
exports.default = _default;