"use strict";

exports.__esModule = true;
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` from `start` up to, but not including, `end`.
 *
 * **Note:** This method is used instead of
 * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
 * returned.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function slice(array, start, end) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return [];
  }

  if (end && typeof end != 'number' && (0, _isIterateeCall.default)(array, start, end)) {
    start = 0;
    end = length;
  } else {
    start = start == null ? 0 : (0, _toInteger.default)(start);
    end = end === undefined ? length : (0, _toInteger.default)(end);
  }

  return (0, _baseSlice.default)(array, start, end);
}

var _default = slice;
exports.default = _default;